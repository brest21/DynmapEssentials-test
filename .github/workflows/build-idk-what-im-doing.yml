name: Build & Release DynmapEssentials

on:
  push:
    branches: [ "master" ]
    tags:        # triggers release on version tags
      - 'v*'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # allows manual run

permissions:
  contents: write  # needed for creating releases

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout source code
      - uses: actions/checkout@v4

      # 2️⃣ Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      # 3️⃣ Grant execute permissions to Gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4️⃣ Build the plugin with shadowJar
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build shadowJar

      # 5️⃣ Upload JAR as artifact
      - name: Upload built plugin
        uses: actions/upload-artifact@v4
        with:
          name: DynmapEssentials
          path: build/libs/*.jar

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # only run on tags

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build plugin for release
        run: ./gradlew clean build shadowJar

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: DynmapEssentials ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR to Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
